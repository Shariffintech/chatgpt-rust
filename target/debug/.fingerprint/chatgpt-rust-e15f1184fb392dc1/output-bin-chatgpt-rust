{"message":"unreachable expression","code":{"code":"unreachable_code","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":3036,"byte_end":3042,"line_start":107,"line_end":107,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    Ok(())","highlight_start":5,"highlight_end":11}],"label":"unreachable expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1577,"byte_end":3026,"line_start":62,"line_end":105,"column_start":5,"column_end":6,"is_primary":false,"text":[{"text":"    loop{","highlight_start":5,"highlight_end":10},{"text":"        //prompt user for input","highlight_start":1,"highlight_end":32},{"text":"        println!(\"<>\");","highlight_start":1,"highlight_end":24},{"text":"        stdout().flush().unwrap();","highlight_start":1,"highlight_end":35},{"text":"        let mut user_text = String::new();","highlight_start":1,"highlight_end":43},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        //read user input","highlight_start":1,"highlight_end":26},{"text":"        stdin()","highlight_start":1,"highlight_end":16},{"text":"            .read_line(&mut user_text)","highlight_start":1,"highlight_end":39},{"text":"            .expect( \"Failed to read line\");","highlight_start":1,"highlight_end":45},{"text":"            println!(\"\");","highlight_start":1,"highlight_end":26},{"text":"","highlight_start":1,"highlight_end":1},{"text":"             //spinners","highlight_start":1,"highlight_end":24},{"text":"            let spin_spin = SpinnerBuilder::new(\"\\t\\tOpenAI is Thinking...\".into()).start();","highlight_start":1,"highlight_end":93},{"text":"            spin_spin.message(\"Loading...\".to_string()).expect( \"Failed to load\");","highlight_start":1,"highlight_end":83},{"text":"       ","highlight_start":1,"highlight_end":8},{"text":"           ","highlight_start":1,"highlight_end":12},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        //send request to api","highlight_start":1,"highlight_end":30},{"text":"        let request_data = OAIRequestdata{","highlight_start":1,"highlight_end":43},{"text":"            prompt: format!(\"{}{}\", preamble, user_text),","highlight_start":1,"highlight_end":58},{"text":"            max_tokens: 600,","highlight_start":1,"highlight_end":29},{"text":"            temperature: 1.0,","highlight_start":1,"highlight_end":30},{"text":"            frequency: 1.0,","highlight_start":1,"highlight_end":28},{"text":"        }; ","highlight_start":1,"highlight_end":12},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        let body = Body::from(serde_json::to_vec(&request_data)?);","highlight_start":1,"highlight_end":67},{"text":"        //url to make the request","highlight_start":1,"highlight_end":34},{"text":"        let request = Request::post(api_url)","highlight_start":1,"highlight_end":45},{"text":"        .header(header::CONTENT_TYPE, \"application/json\")","highlight_start":1,"highlight_end":58},{"text":"        .header(\"Authorization\", &auth_header_value)","highlight_start":1,"highlight_end":53},{"text":"        .body(body)","highlight_start":1,"highlight_end":20},{"text":"        .unwrap();","highlight_start":1,"highlight_end":19},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        // grab the client provided by hyper and send the request to client","highlight_start":1,"highlight_end":76},{"text":"        //return response and print it  ","highlight_start":1,"highlight_end":41},{"text":"        let response = client.request(request).await?;","highlight_start":1,"highlight_end":55},{"text":"        let body = hyper::body::aggregate(response).await?;","highlight_start":1,"highlight_end":60},{"text":"        let json: OAIResponse = serde_json::from_reader(body.reader())?;","highlight_start":1,"highlight_end":73},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        spin_spin.close();","highlight_start":1,"highlight_end":27},{"text":"        println!(\"\");","highlight_start":1,"highlight_end":22},{"text":"        println!(\"{}\", json.choices[0].text);","highlight_start":1,"highlight_end":46},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":"any code following this expression is unreachable","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unreachable_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unreachable expression\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:107:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m62\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    loop{\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m63\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        //prompt user for input\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m64\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        println!(\"<>\");\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m65\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        stdout().flush().unwrap();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m104\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        println!(\"{}\", json.choices[0].text);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_____-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12many code following this expression is unreachable\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m107\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    Ok(())\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33munreachable expression\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unreachable_code)]` on by default\u001b[0m\n\n"}
{"message":"1 warning emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 1 warning emitted\u001b[0m\n\n"}
